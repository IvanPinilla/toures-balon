{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "API Ordenes",
    "description" : "API que define los servicios de ordenes, para consulta facturación y pago de estas."
  },
  "security" : [ {
    "application" : [ "read", "write" ]
  } ],
  "tags" : [ {
    "name" : "Ordenes",
    "description" : "Define los servicios de ordenes, para consulta facturación y pago de estas."
  }, {
    "name" : "Facturas",
    "description" : "Contiene la información del pago aprobado por una entidad bancaria."
  } ],
  "paths" : {
    "/ordenes" : {
      "get" : {
        "summary" : "Retorna lista de ordenes",
        "description" : "Metodo que retorna la lista de ordenes",
        "parameters" : [ {
          "in" : "query",
          "name" : "fechaDesde",
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "fechaHasta",
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Orden"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "operationId" : "adicionarOrden",
        "summary" : "Adiciona una nueva orden",
        "parameters" : [ {
          "in" : "query",
          "name" : "orden",
          "$ref" : "#/components/schemas/Orden"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/ordenes/cliente/{clienteId}" : {
      "get" : {
        "description" : "Devuelve la información de una orden asociada a un cliente.",
        "tags" : [ "Ordenes" ],
        "summary" : "devuelve informaicón de una orden.",
        "operationId" : "obtenerFacturaPorClienteId",
        "parameters" : [ {
          "name" : "clienteId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "$ref" : "https://github.com/optimus1006/toures-balon/blob/master/ujaveriana-Pais-1.0.0-domain.yaml"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Se ha realizado la consulta exitosamente.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Orden"
                }
              }
            }
          }
        }
      }
    },
    "/ordenes/{id}" : {
      "get" : {
        "tags" : [ "Ordenes" ],
        "summary" : "Obtener una orden por ID.",
        "description" : "Obtener una orden por ID.\n",
        "operationId" : "obtenerOrdenPorId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de orden",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Orden"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Orden" ],
        "summary" : "Actualizar los datos de una orden.",
        "description" : "Actualizar los datos de una orden.\n",
        "operationId" : "actualizarOrden",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de orden",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "query",
          "name" : "estado",
          "schema" : {
            "type" : "string",
            "enum" : [ "SIN_PAGO", "CANCELADA", "PAGADA" ]
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa"
          },
          "400" : {
            "description" : "Error en actualizacion de orden."
          },
          "404" : {
            "description" : "Orden no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      },
      "delete" : {
        "tags" : [ "Orden" ],
        "summary" : "Cancelar una orden.",
        "description" : "Cancelar los datos de una orden.\n",
        "operationId" : "cancelarOrden",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de orden",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa"
          },
          "400" : {
            "description" : "Error en cancelacion de orden."
          },
          "404" : {
            "description" : "Orden no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      }
    },
    "/ordenes/{facturaId}" : {
      "get" : {
        "description" : "Devuelve la información de la factura a pagar.",
        "tags" : [ "Factura" ],
        "summary" : "Devuelve factura a pagar.",
        "operationId" : "obtenerFactura",
        "parameters" : [ {
          "in" : "path",
          "name" : "facturaId",
          "description" : "Número de la orden a pagar.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 1293863
        } ],
        "responses" : {
          "200" : {
            "description" : "Factura encontrada.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factura"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factura"
                }
              }
            }
          },
          "400" : {
            "description" : "Factura inválida."
          },
          "404" : {
            "description" : "Factura no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      }
    },
    "/ordenes/pagar" : {
      "post" : {
        "description" : "Paga una factura con los valores especificados.",
        "tags" : [ "Factura" ],
        "summary" : "Paga una factura.",
        "operationId" : "pagarOrden",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/FacturaPago"
        },
        "responses" : {
          "200" : {
            "description" : "Pago realizado."
          },
          "400" : {
            "description" : "Entrada inválida."
          },
          "404" : {
            "description" : "Factura no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      }
    },
    "/clientes" : {
      "get" : {
        "summary" : "Retorna lista de ordenes",
        "description" : "Metodo que retorna la lista de ordenes",
        "parameters" : [ {
          "in" : "query",
          "name" : "fechaDesde",
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "fechaHasta",
          "schema" : {
            "type" : "string",
            "format" : "date"
          },
          "required" : true
        }, {
          "in" : "query",
          "name" : "cliente",
          "schema" : {
            "type" : "integer"
          },
          "required" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Orden"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "operationId" : "adicionarCliente",
        "summary" : "Adiciona un nuevo cliente",
        "parameters" : [ {
          "in" : "query",
          "name" : "cliente",
          "$ref" : "#/components/schemas/Cliente"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/clientes/{id}" : {
      "get" : {
        "tags" : [ "Clientes" ],
        "summary" : "Obtener un cliente por ID.",
        "description" : "Obtener un cliente por ID.\n",
        "operationId" : "obtenerClientePorId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de cliente",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Cliente"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Cliente" ],
        "summary" : "Actualizar los datos de un Cliente.",
        "description" : "Actualizar los datos de un cliente.\n",
        "operationId" : "actualizarCliente",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de cliente",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "query",
          "name" : "estado",
          "schema" : {
            "type" : "string",
            "enum" : [ "ACTIVO", "INACTIVO" ]
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa"
          },
          "400" : {
            "description" : "Error en actualizacion de cliente."
          },
          "404" : {
            "description" : "Cliente no encontrado."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      }
    }
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/optimus1006/TouresBalon/1.0.0"
  } ],
  "components" : {
    "schemas" : {
      "Orden" : {
        "description" : "Orden de pago con los productos del paquete que el cliente va a comprar",
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "fecha" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id-cliente" : {
            "type" : "integer"
          },
          "estado" : {
            "type" : "string",
            "enum" : [ "EN_VALIDACION", "EN_RESERVA", "CERRADA", "RECHAZADA", "CANCELADA" ]
          },
          "transporte" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Transporte"
            }
          },
          "hospedaje" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Hospedaje"
            }
          },
          "evento" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Evento"
            }
          },
          "factura" : {
            "$ref" : "#/components/schemas/Factura"
          }
        }
      },
      "Transporte" : {
        "description" : "Este objeto tiene la estructura básica de la información necesaria para identificar el transporte a usar por el cliente.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "empresa" : {
            "type" : "string"
          },
          "fecha" : {
            "type" : "string",
            "format" : "date"
          },
          "puesto" : {
            "type" : "string"
          },
          "tipo" : {
            "type" : "string",
            "description" : "Tipo de transporte.",
            "enum" : [ "Avion", "Bus", "Tren", "Crucero" ]
          },
          "trayecto" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Trayecto"
            }
          }
        }
      },
      "Hospedaje" : {
        "description" : "Este objeto tiene la información necesaria para identificar el hospedaje a usar por el cliente.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "fechaLlegada" : {
            "type" : "string",
            "format" : "date"
          },
          "fechaSalida" : {
            "type" : "string",
            "format" : "date"
          },
          "habitacion" : {
            "type" : "string"
          },
          "ubicacion" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          },
          "direccion" : {
            "$ref" : "#/components/schemas/Direccion"
          },
          "imagenes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Imagen"
            }
          }
        }
      },
      "Evento" : {
        "description" : "Contiene la información del evento al cual es cliente asistirá.",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "nombre" : {
            "type" : "string"
          },
          "descripcion" : {
            "type" : "string"
          },
          "fecha" : {
            "type" : "string",
            "format" : "date"
          },
          "hora" : {
            "type" : "string",
            "format" : "time"
          },
          "zonaHoraria" : {
            "type" : "string"
          },
          "ubicacionEvento" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          },
          "localidades" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Localidad"
            }
          },
          "tipo" : {
            "type" : "string",
            "description" : "Tipo de evento.",
            "enum" : [ "Concierto", "Futbol", "Baloncesto", "Actividad", "Otro" ]
          },
          "imagenes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Imagen"
            }
          },
          "imagenPrincipal" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 1
          }
        }
      },
      "Imagen" : {
        "description" : "Contiene la información de la imagen que se mostrará del evento.",
        "type" : "object",
        "properties" : {
          "nombre" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          }
        }
      },
      "Localidad" : {
        "description" : "Contiene la información de la localidad dentro del evento, en caso de existir .",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "nombre" : {
            "type" : "string"
          },
          "precio" : {
            "type" : "number",
            "format" : "double"
          },
          "aforo" : {
            "type" : "integer"
          }
        }
      },
      "UbicacionGeografica" : {
        "description" : "Ubicación geográfica",
        "type" : "object",
        "properties" : {
          "latitud" : {
            "type" : "number",
            "format" : "float"
          },
          "longitud" : {
            "type" : "number",
            "format" : "float"
          }
        }
      },
      "Pais" : {
        "description" : "País",
        "type" : "object",
        "properties" : {
          "codigo" : {
            "description" : "Código del país.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "number"
          },
          "nombre" : {
            "description" : "Nombre del país.",
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 64
          }
        }
      },
      "Ciudad" : {
        "description" : "Ciudad",
        "type" : "object",
        "properties" : {
          "codigo" : {
            "description" : "Código de la ciudad.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "number"
          },
          "nombre" : {
            "description" : "Nombre de la ciudad.",
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 64
          },
          "pais" : {
            "$ref" : "#/components/schemas/Pais"
          }
        }
      },
      "Estado" : {
        "description" : "Estado",
        "type" : "object",
        "properties" : {
          "codigo" : {
            "description" : "Código del estado.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "number"
          },
          "nombre" : {
            "description" : "Nombre del estado.",
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 64
          },
          "pais" : {
            "$ref" : "#/components/schemas/Pais"
          }
        }
      },
      "Trayecto" : {
        "description" : "indica los puntos de inicio y fin de un trayecto",
        "type" : "object",
        "properties" : {
          "origen" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          },
          "destino" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          }
        }
      },
      "Factura" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "monto" : {
            "type" : "number",
            "format" : "double",
            "pattern" : "^-?[0-9]+(\\.[0-9]+)?$",
            "minLength" : 3,
            "maxLength" : 20
          },
          "estado" : {
            "type" : "string",
            "description" : "Estado de la factura a pagar.",
            "enum" : [ "PAGADO", "NO_PAGADO" ]
          }
        },
        "xml" : {
          "name" : "Factura"
        }
      },
      "Cliente" : {
        "type" : "object",
        "required" : [ "id" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "nombres" : {
            "type" : "string",
            "description" : "Nombres del cliente."
          },
          "apellidos" : {
            "type" : "string",
            "description" : "Apellidos."
          },
          "email" : {
            "type" : "string",
            "format" : "email"
          },
          "telefono" : {
            "type" : "string"
          },
          "celular" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string",
            "format" : "password"
          },
          "estado" : {
            "type" : "string",
            "description" : "Estado del cliente.",
            "enum" : [ "ACTIVO", "INACTIVO" ]
          },
          "direcciones" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Direccion"
            }
          },
          "tarjetas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tarjeta"
            }
          }
        }
      },
      "Direccion" : {
        "description" : "Contiene la información de la direccion",
        "type" : "object",
        "properties" : {
          "direccion" : {
            "description" : "Dirección completa.",
            "maxLength" : 254,
            "type" : "string"
          },
          "ubicacion" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          },
          "tipo" : {
            "type" : "string",
            "enum" : [ "CASA", "OFICINA", "OTRO" ]
          },
          "pais" : {
            "$ref" : "#/components/schemas/Pais"
          },
          "ciudad" : {
            "$ref" : "#/components/schemas/Ciudad"
          },
          "estado" : {
            "$ref" : "#/components/schemas/Estado"
          },
          "fechaCreacion" : {
            "description" : "Fecha de creación de la dirección",
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "Convenio" : {
        "description" : "Afiliación de un comercio que ofrece servicios de hospedaje, transporte o eventos deportivos.",
        "type" : "object",
        "properties" : {
          "nombreProveedor" : {
            "description" : "Nombre del proveedor de servicios.",
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 254
          },
          "identificacion" : {
            "description" : "Identificación del proveedor de servicios.",
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 40
          },
          "tipoConvenio" : {
            "description" : "Tipo de convenio.",
            "type" : "string",
            "enum" : [ "TRANSPORTE", "HOSPEDAJE", "EVENTO" ]
          },
          "fechaVigencia" : {
            "description" : "Vigencia del convenio.",
            "type" : "string",
            "format" : "date-time"
          },
          "correo" : {
            "description" : "Correo de contacto del convenio.",
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 90
          },
          "pais" : {
            "description" : "País de origen de operación del convenio.",
            "$ref" : "#/components/schemas/Pais"
          },
          "ciudad" : {
            "description" : "Ciudad de operación de la empresa de convenio.",
            "$ref" : "#/components/schemas/Ciudad"
          }
        }
      },
      "Tarjeta" : {
        "description" : "Contiene la información de la tarjeta",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "numero" : {
            "type" : "string"
          },
          "tipo" : {
            "type" : "string",
            "enum" : [ "VISA", "MASTER_CARD" ]
          },
          "estado" : {
            "type" : "string",
            "enum" : [ "ACTIVA", "INACTIVA" ]
          },
          "principal" : {
            "type" : "boolean",
            "default" : false
          }
        }
      }
    },
    "requestBodies" : {
      "FacturaConsulta" : {
        "description" : "Request con solo la referencia de la factura.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                }
              }
            }
          },
          "application/xml" : {
            "schema" : {
              "type" : "object",
              "required" : [ "id" ],
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                }
              }
            }
          }
        }
      },
      "FacturaPago" : {
        "description" : "Request con solo la información de la referencia de la factura y el valor.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "required" : [ "id", "monto" ],
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                },
                "monto" : {
                  "type" : "number",
                  "format" : "double",
                  "example" : 150000.0,
                  "pattern" : "^-?[0-9]+(\\.[0-9]+)?$",
                  "minLength" : 3,
                  "maxLength" : 20
                }
              }
            }
          },
          "application/xml" : {
            "schema" : {
              "type" : "object",
              "required" : [ "id", "monto" ],
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                },
                "monto" : {
                  "type" : "number",
                  "format" : "double",
                  "example" : 150000.0,
                  "pattern" : "^-?[0-9]+(\\.[0-9]+)?$",
                  "minLength" : 3,
                  "maxLength" : 20
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "application" : {
        "type" : "oauth2",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "http://example.com/oauth/token",
            "scopes" : {
              "write" : "allows modifying resources",
              "read" : "allows reading resources"
            }
          }
        }
      }
    }
  }
}