{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Este es un servidor de transacciones de pagos.",
    "version" : "1.0.0",
    "title" : "Toures Balon",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact" : {
      "name" : "Archetype",
      "email" : "iv.pinilla@javeriana.edu.co"
    }
  },
  "servers" : [ {
    "description" : "Servicio de pagos por API REST",
    "url" : "http://localhost:8080/SistemaPagos/v1.0.0"
  } ],
   "paths" : {
    "/ordenes" : {
      "get" : {
        "summary" : "Retorna lista de ordenes",
        "description" : "Metodo que retorna la lista de ordenes",
        "parameters" : [ {
          "name" : "fechaDesde",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "fechaHasta",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "cliente",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Adiciona una nueva orden",
        "operationId" : "adicionarOrden",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/ordenes/{id}" : {
      "get" : {
        "tags" : [ "Ordenes" ],
        "summary" : "Obtener una orden por ID.",
        "description" : "Obtener una orden por ID.\n",
        "operationId" : "obtenerOrdenPorId",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de orden",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Orden"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Orden" ],
        "summary" : "Actualizar los datos de una orden.",
        "description" : "Actualizar los datos de una orden.\n",
        "operationId" : "actualizarOrden",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de orden",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "estado",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "SIN_PAGO", "CANCELADA", "PAGADA" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa"
          },
          "400" : {
            "description" : "Error en actualizacion de orden."
          },
          "404" : {
            "description" : "Orden no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      },
      "delete" : {
        "tags" : [ "Orden" ],
        "summary" : "Cancelar una orden.",
        "description" : "Cancelar los datos de una orden.\n",
        "operationId" : "cancelarOrden",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Id de orden",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Operacion exitosa"
          },
          "400" : {
            "description" : "Error en cancelacion de orden."
          },
          "404" : {
            "description" : "Orden no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      }
    },
    "/ordenes/factura" : {
      "get" : {
        "tags" : [ "Factura" ],
        "summary" : "Devuelve factura a pagar.",
        "description" : "Devuelve la información de la factura a pagar.",
        "operationId" : "obtenerFactura",
        "parameters" : [ {
          "name" : "numeroOrden",
          "in" : "query",
          "description" : "Número de la orden a pagar.",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          },
          "example" : 1293863
        } ],
        "responses" : {
          "200" : {
            "description" : "Factura encontrada.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factura"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Factura"
                }
              }
            }
          },
          "400" : {
            "description" : "Factura inválida."
          },
          "404" : {
            "description" : "Factura no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      }
    },
    "/ordenes/pagar" : {
      "post" : {
        "tags" : [ "Factura" ],
        "summary" : "Paga una factura.",
        "description" : "Paga una factura con los valores especificados.",
        "operationId" : "pagarOrden",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/FacturaPago"
        },
        "responses" : {
          "200" : {
            "description" : "Pago realizado."
          },
          "400" : {
            "description" : "Entrada inválida."
          },
          "404" : {
            "description" : "Factura no encontrada."
          },
          "500" : {
            "description" : "Error en el procesamiento de la petición."
          }
        }
      }
    },
    "/ping" : {
      "get" : {
        "summary" : "Server heartbeat operation",
        "description" : "This operation shows how to override the global security defined above, as we want to open it up for all users.",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "security" : [ ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Orden" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "fecha" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id-cliente" : {
            "type" : "integer"
          },
          "estado" : {
            "type" : "string",
            "enum" : [ "SIN_PAGO", "CANCELADA", "PAGADA" ]
          },
          "transporte" : {
            "$ref" : "#/components/schemas/Transporte"
          },
          "hospedaje" : {
            "$ref" : "#/components/schemas/Hospedaje"
          },
          "evento" : {
            "$ref" : "#/components/schemas/Evento"
          }
        }
      },
      "Transporte" : {
        "type" : "object",
        "properties" : {
          "fecha" : {
            "type" : "string",
            "format" : "date"
          },
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "puesto" : {
            "type" : "string"
          },
          "tipo" : {
            "type" : "string",
            "description" : "Tipo de transporte.",
            "enum" : [ "Avion", "Bus", "Tren", "Crucero" ]
          },
          "trayecto" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Trayecto"
            }
          }
        },
        "description" : "Este objeto tiene la estructura básica de la información necesaria para identificar el transporte a usar por el cliente."
      },
      "Hospedaje" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "fechaLlegada" : {
            "type" : "string",
            "format" : "date"
          },
          "fechaSalida" : {
            "type" : "string",
            "format" : "date"
          },
          "habitacion" : {
            "type" : "string"
          },
          "ubicacion" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          }
        },
        "description" : "Este objeto tiene la información necesaria para identificar el hospedaje a usar por el cliente."
      },
      "Evento" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "readOnly" : true
          },
          "fecha" : {
            "type" : "string",
            "format" : "date"
          },
          "ubicacionEvento" : {
            "type" : "string"
          },
          "destino" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          }
        },
        "description" : "Contiene la información del evento al cual es cliente asistirá."
      },
      "UbicacionGeografica" : {
        "type" : "object",
        "properties" : {
          "latitud" : {
            "type" : "number",
            "format" : "float"
          },
          "longitud" : {
            "type" : "number",
            "format" : "float"
          },
          "detalle" : {
            "type" : "string",
            "description" : "Indica la dirección física de un sitio"
          },
          "pais" : {
            "$ref" : "#/components/schemas/UbicacionGeografica_pais"
          }
        },
        "description" : "Ubicación geográfica"
      },
      "Trayecto" : {
        "type" : "object",
        "properties" : {
          "origen" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          },
          "destino" : {
            "$ref" : "#/components/schemas/UbicacionGeografica"
          }
        },
        "description" : "indica los puntos de inicio y fin de un trayecto"
      },
      "Factura" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "monto" : {
            "maxLength" : 20,
            "minLength" : 3,
            "pattern" : "^-?[0-9]+(\\.[0-9]+)?$",
            "type" : "number",
            "format" : "double"
          },
          "estado" : {
            "type" : "string",
            "description" : "Estado de la factura a pagar.",
            "enum" : [ "PAGADO", "NO_PAGADO" ]
          }
        },
        "xml" : {
          "name" : "Factura"
        }
      },
      "Cliente" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "nombres" : {
            "type" : "string",
            "description" : "Nombres del cliente."
          },
          "apellidos" : {
            "type" : "string",
            "description" : "Apellidos."
          },
          "estado" : {
            "type" : "string",
            "description" : "Estado del cliente.",
            "enum" : [ "ACTIVO", "INACTIVO" ]
          }
        },
        "xml" : {
          "name" : "Factura"
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "name" : {
            "type" : "string"
          },
          "fullTime" : {
            "type" : "boolean"
          }
        },
        "example" : {
          "id" : 1,
          "name" : "Jessica Right",
          "fullTime" : true
        }
      },
      "UbicacionGeografica_pais_ciudad_localidad" : {
        "type" : "object",
        "properties" : {
          "nombre" : {
            "type" : "string"
          },
          "codigo" : {
            "type" : "integer"
          }
        }
      },
      "UbicacionGeografica_pais_ciudad" : {
        "type" : "object",
        "properties" : {
          "nombre" : {
            "type" : "string"
          },
          "codigo" : {
            "type" : "integer"
          },
          "localidad" : {
            "$ref" : "#/components/schemas/UbicacionGeografica_pais_ciudad_localidad"
          }
        }
      },
      "UbicacionGeografica_pais" : {
        "type" : "object",
        "properties" : {
          "nombre" : {
            "type" : "string"
          },
          "codigo" : {
            "type" : "integer"
          },
          "ciudad" : {
            "$ref" : "#/components/schemas/UbicacionGeografica_pais_ciudad"
          }
        }
      }
    },
    "requestBodies" : {
      "FacturaConsulta" : {
        "description" : "Request con solo la referencia de la factura.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "id" ],
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                }
              }
            }
          },
          "application/xml" : {
            "schema" : {
              "required" : [ "id" ],
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                }
              }
            }
          }
        }
      },
      "FacturaPago" : {
        "description" : "Request con solo la información de la referencia de la factura y el valor.",
        "content" : {
          "application/json" : {
            "schema" : {
              "required" : [ "id", "monto" ],
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                },
                "monto" : {
                  "maxLength" : 20,
                  "minLength" : 3,
                  "pattern" : "^-?[0-9]+(\\.[0-9]+)?$",
                  "type" : "number",
                  "format" : "double",
                  "example" : 150000
                }
              }
            }
          },
          "application/xml" : {
            "schema" : {
              "required" : [ "id", "monto" ],
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "format" : "int64",
                  "example" : 123456789
                },
                "monto" : {
                  "maxLength" : 20,
                  "minLength" : 3,
                  "pattern" : "^-?[0-9]+(\\.[0-9]+)?$",
                  "type" : "number",
                  "format" : "double",
                  "example" : 150000
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "application" : {
        "type" : "oauth2",
        "flows" : {
          "clientCredentials" : {
            "tokenUrl" : "http://example.com/oauth/token",
            "scopes" : {
              "write" : "allows modifying resources",
              "read" : "allows reading resources"
            }
          }
        }
      }
    }
  }
}