/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.2).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.touresbalon.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import com.touresbalon.service.domain.Cliente;
import com.touresbalon.service.domain.ClientesGETAllRS;
import com.touresbalon.service.domain.ClientesGETByIdRs;
import com.touresbalon.service.domain.ClientesPCTRq;
import com.touresbalon.service.domain.ClientesPCTRs;
import com.touresbalon.service.domain.ClientesPSTRq;
import com.touresbalon.service.domain.ClientesPSTRs;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-04-09T13:17:10.375-05:00[America/Bogota]")

//@Validated
//@Api(value = "clientes", description = "the clientes API")
public interface ClientesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }


    public ResponseEntity<Void> clientesDEL(@ApiParam(value = "Id de cliente",required=true) @PathVariable("idCliente") Long idCliente);


    public ClientesGETAllRS clientesGETAll(@ApiParam(value = "El número de clientes a omitir antes de comenzar a recopilar el conjunto de resultados") @Valid @RequestParam(value = "offset", required = false) Integer offset,@ApiParam(value = "El número de clientes a retornar") @Valid @RequestParam(value = "limit", required = false) Integer limit,@ApiParam(value = "Nombres para consultar") @Valid @RequestParam(value = "nombres", required = false) Integer nombres,@ApiParam(value = "Apellidos para consultar") @Valid @RequestParam(value = "apellidos", required = false) Integer apellidos,@ApiParam(value = "Estado del cliente.", allowableValues = "ACTIVO, INACTIVO") @Valid @RequestParam(value = "estado", required = false) String estado);


    public ClientesGETByIdRs clientesGETById(@ApiParam(value = "Id de cliente",required=true) @PathVariable("identificacion") String identificacion);



    public ResponseEntity<ClientesPCTRs> clientesPCT(@ApiParam(value = "Cliente a actualizar"  )  @Valid @RequestBody ClientesPCTRq clientesPCTRq);

    public ResponseEntity clientesPST(@ApiParam(value = "Cliente a registrar"  )  @Valid @RequestBody ClientesPSTRq clientesPSTRq);

}
